% Гамма распределение a=2 b=3

% 1
% В соответствии с номером варианта, используя генератор псевдослучайных
% чисел, генерировать выборку из заданного непрерывного распределения
% объемом N=10000 с заданными для вашего распределения параметрами

N = 10000;  % Объем выборки
v = gamrnd(2, 3, N, 1);  % Создание вектора длинной N с числами из гамма распределения где a = 2 и b = 3

% 2
% 2.1 С помощью стандартных функций, содержащихся в математическом пакете,
% получить минимальное и максимальное значения выборки, выборочное среднее,
% выборочную дисперсию (исправленную и неисправленную), выборочное
% среднеквадратичное отклонение для исправленной дисперсии

vMin = min(v);  % Получение минимального значения выборки
vMax = max(v);  % Получение максимального значения выборки
vMean = mean(v);  % Получение выборочного среднего
vVar = var(v);  % Получение неисправленной дисперсии выборки
vCorVar = (N / (N - 1)) * vVar;  % Получение исправленной дисперсии выборки
vStd = sqrt(vCorVar);  % Получение среднеквадратичного отклонения исправленной дисперсии

% 2.2 Для заданного теоретического распределения, из которого генерируете
% выборку, письменно в тетради провести расчет математического ожидания и
% дисперсии. Сравнить полученные теоретические результаты с выборочным
% средним и исправленной выборочной дисперсией. Сделать выводы

disp(['Среднее значение: ' num2str(vMean)]);  % Вывод среднего значение
disp(['Относительная погрешность: ' num2str(abs(vMean - 6)/6) '%'])
disp(['Исправленная дисперсия: ' num2str(vCorVar)]);  % Вывод исправленной дисперсии
disp(['Относительная погрешность: ' num2str(abs(vCorVar - 18)/18) '%'])

% Теоретическое вычисление среднего значение дало: 6 (a * b)
% Теоретическое вычисление дисперсии генеральной выборки дало: 18 (a * b^2)

% Вывод: Программа считает значение среднего и дисперсии относительно
% точно и после теста не выдала значение с погрешностью больше 0.5 для
% дисперсии или 0.01 для среднего. 

% 2.3 Проанализировать поведение выборочного среднего и исправленной
% выборочной дисперсии в зависимости от объема выборки. Для этого получить
% следующие графические зависимости:
% Генерировать 1000 выборочных реализаций объемом N = 10. Для каждой из них
% посчитать выборочное среднее и исправленную выборочную дисперсию.
% Построить график зависимости выборочного среднего от номера реализации и
% график зависимости исправленной выборочной дисперсии от номера
% реализации. На первый из них также нанести значение математического
% ожидания, а на второй значение дисперсии, посчитанные по теоретическим
% формулам.

% Далее проделать все то же самое для N = 50, 100, 10000
% Проанализировать полученные графические зависимости и сделать выводы.

figure;  % Создание экрана
nums = [10, 50, 100, 10000];  % Варианты N  

for i = 0:3  % Делаем 4 слоя графиков через for
    en = gamrnd(2, 3, nums(i + 1), 1000);  % Генерируем матрицу из выборок
    evMean = mean(en);  % считаем среднее для всех выборок
    evCorVar = (nums(i + 1) / (nums(i + 1) - 1)) * var(en);  % считаем исправленную дисперсию для всех выборок
    
    subplot(4, 2, i * 2 + 1);  % Выбираем субплоскость
    plot(evMean);  % Создаем ломаную из точек. (x автоматически от 1 до 1000)
    grid on;  % Включаем сетку для наглядности
    title(['Выборочные средние для реализаций с N=' num2str(nums(i + 1))]);  % Подписываем график
    xlabel("Номер реализации");  % Подписываем ось x 
    ylabel("Выборочное среднее");    % Подписываем ось y
    line([0 1000], [6 6], "color", "red");  % Рисуем линию для наглядности разности точек на плоскости с ожидаемым значением
    
    subplot(4, 2, i * 2 + 2);  % Далее аналогично
    plot(evCorVar);
    grid on;
    title(['Выборочные исправленные дисперсии для реализаций с N=' num2str(nums(i + 1))]);
    xlabel("Номер реализации");
    ylabel("Выб. испр. дисперсия");
    line([0 1000], [18 18], "color", "red");
end

clear en;  % Очищаем память
clear evMean;
clear evCorvar;

% Вывод: Чем больше значений в выборке, тем меньше расстояние до среднего
% значения и исправленной дисперсии вычисленных на генеральной выборке

% 2.4 Найти среднее от выборочного среднего и среднее от исправленной
% выборочной дисперсии по 1000 штук выборочных реализаций объемом 10000.
% Сравнить полученные значения с математическим ожиданием и дисперсией того
% распределения, из которого выборка генерировалась.

ev = gamrnd(2, 3, 10000, 1000);  % Создаем матрицу из выборок
eMean = mean(mean(ev));  % Считаем среднее значение средних значений
eVar = mean(10000 / 9999 * var(ev));  % Считаем среднее значение исправленных дисперсий
disp(['Среднее значение: ' num2str(eMean)]);  % Вывод среднего значение
disp(['Относительная погрешность (в сравнении с значением первой выборки): ' num2str(abs(eMean - vMean)/eMean) '%'])
disp(['Исправленная дисперсия: ' num2str(eVar)]);  % Вывод исправленной дисперсии
disp(['Относительная погрешность (в сравнении с значением первой выборки): ' num2str(abs(eVar - vCorVar)/eVar) '%'])

clear ev;
clear eMean;
clear eVar;
